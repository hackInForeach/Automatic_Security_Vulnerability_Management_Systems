# file_manager.py

# Uygulama içindeki olayları (logları) kaydetmek için kullanılır.
import logging

# İşletim sistemi ile etkileşime geçmek için kullanılır, dosya ve dizin işlemleri için.
import os

def ensure_files_exist(file_list):
    """
    Verilen dosya listesinde belirtilen dosyaların varlığını kontrol eder.
    Eksik dosyalar varsa, boş dosyalar oluşturur.
    Args:file_list (list): Kontrol edilecek ve oluşturulacak dosya adlarını içeren liste.
    """
    logger = logging.getLogger()  # Mevcut logger'ı al
    log_directory = "log"  # Log dosyalarının saklanacağı klasör
    try:
        # Log klasörünün varlığını kontrol et, yoksa oluştur
        if not os.path.exists(log_directory):
            os.makedirs(log_directory)  # Klasör yoksa oluştur
            logger.info(f"{log_directory} klasörü oluşturuldu.")  # Klasör oluşturulduğunda bilgi logu
    except OSError as e:
        logger.error(f"Log klasörü oluşturulurken bir hata oluştu: {e}")
        return
    for file_name in file_list:
        full_path = os.path.join(log_directory, file_name)  # Dosyanın tam yolunu oluştur
        try:
            if not os.path.isfile(full_path):  # Dosya mevcut değilse
                with open(full_path, 'w') as f:
                    pass  # Boş dosya oluşturulur
                logger.info(f"{full_path} dosyası oluşturuldu.")  # Dosya oluşturulduğunda bilgi logu
            elif os.path.isfile(full_path):  # Dosya mevcutsa
                with open(full_path, 'w') as f:
                    pass  # Dosya temizlenir
                logger.info(f"{full_path} dosyası mevcut. Temizlendi.")  # Dosya temizlendiğinde bilgi logu
        except OSError as e:
            logger.error(f"{full_path} dosyası oluşturulurken bir hata oluştu: {e}")
        except IOError as e:
            logger.error(f"{full_path} dosyası açılırken bir hata oluştu: {e}")

